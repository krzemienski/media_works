#!/bin/bash
if [ ! -z "$1" ]; then echo '
 Fast transcoding (mkv webm flv ts avi) to compatible format with an old TV
 i.e. *.mp4 {H264 =<30fps =<1920x1080 + aac normalized drc}
 Req: bash, hash, grep, head, tail, wc, mediainfo, ffmpeg with nvenc support,
 nvidia GT 630 or better (except 1030) and installed proprietary Nvidia drivers
 Use: ./nvenc2mp4
 Author Andrew S.
 Licence GPL
 https://github.com/quarkscript/media_works
' ;exit 0 ;fi

rm -f list.tmp fn.tmp finf.tmp
for j in mkv webm flv ts avi ; do
        find -maxdepth 1 -type f -name "*.$j" | sed -e "s/.\///g" >>list.tmp
done
if [ "$(wc -l list.tmp | sed -e 's/ list.tmp//g' )" -eq "0" ]; then
        echo "
*.mkv *.webm *.flv *.ts *.avi not found, copy video sources to current dir 
or rename existed to any of specified extensions... exit now."
else
    if (hash ffmpeg 2>/dev/null)&&($(ffmpeg -encoders | grep h264_nvenc -q))&&(hash mediainfo 2>/dev/null); then
            while [ $((j+=1)) -le "$(wc -l list.tmp | sed -e 's/ list.tmp//g' )" ]; do
                    tail -n $j list.tmp>fn.tmp
                    i="$(head -n 1 fn.tmp)"
                    param=""
                    mediainfo "$i" >finf.tmp
                    vidfps=$(cat finf.tmp | grep FPS | grep -v SPF | grep -o -e "[0-9][0-9][.]" | sed -e 's/\.//g')
                    vidw=$(cat finf.tmp | grep Width | sed -e 's/\://g' | sed -e 's/Width//g' | sed -e 's/pixels//g' | sed -e 's/ //g')
                    vidh=$(cat finf.tmp | grep Height | sed -e 's/\://g' | sed -e 's/Height//g' | sed -e 's/pixels//g' | sed -e 's/ //g')
                    audch=$(cat finf.tmp | grep "Channel(s)" -m 1 | sed -e 's/\://g' | sed -e 's/Channel(s)//g' | sed -e 's/channels//g' | sed -e 's/ //g')
                    if [ "$vidw" -gt "1920" ] || [ "$vidh" -gt "1080" ]; then
                            param+='-vf scale=h=1080:force_original_aspect_ratio=decrease:flags=fast_bilinear '
                    fi
                    param+='-c:v h264_nvenc -coder cabac -preset hq -rc vbr_hq  '
                    if [ "$vidfps" -gt "31" ]; then
                            param+="-r 30 "
                    fi
                    if [ "$audch" -gt "2" ]; then
                            audparam="-ac 2 "
                    else
                            audparam=""
                    fi
                    audparam+="-af acompressor=link=maximum:ratio=10:attack=0.1:release=2000:detection=peak:threshold=-20dB"
                    echo calculating audio gain...
                    vol_up=$(ffmpeg -i "$i" -hide_banner $audparam,volumedetect -f null /dev/null 2>&1 | grep max_volume | grep max_volume | grep -o -E "[-][0-9][0-9.][0-9 .][0-9 ]" | sed -e 's/-//g' | sed -e 's/ //g') 
                    if [ "$(echo $vol_up | sed -e 's/\.//g')" -gt "639" ]; then 
                            vol_up=64
                    fi
                    vol_up+=dB
                    param+="-c:a aac $audparam,volume=$vol_up "
                    
                    ffmpeg  -hwaccel cuda -i "$i" $param "${i%.*}.mp4" -hide_banner
                    #ffmpeg -hwaccel cuvid -i "$i" $param "${i%.*}.mp4" -hide_banner
                    #echo ffmpeg -hwaccel cuvid -i '"'$i'"' $param '"'${i%.*}.mp4'"' -hide_banner >>log.tmp
            done
        else
            echo "ffmpeg or mediainfo not found or ffmpeg doesn't support h264_nvenc"
    fi
fi
rm -f list.tmp fn.tmp finf.tmp
